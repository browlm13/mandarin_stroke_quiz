{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "#\n",
    "# Creating Labeled Data by iterating through raw images \n",
    "#\n",
    "\n",
    "from os import listdir\n",
    "from PIL import Image as PImage\n",
    "\n",
    "def loadImages(path):\n",
    "    # return array of images\n",
    "\n",
    "    imagesList = listdir(path)\n",
    "    loadedImages = []\n",
    "    for image in imagesList:\n",
    "        img = PImage.open(path + image)\n",
    "        loadedImages.append(img)\n",
    "\n",
    "    return loadedImages\n",
    "\n",
    "#\n",
    "# Get all raw image paths\n",
    "#\n",
    "    \n",
    "import glob\n",
    "def get_all_raw_image_paths(page_list=[]):\n",
    "    glob_path_template = \"raw_images/cropped_pages/p*/\"\n",
    "    \n",
    "    all_pages = False\n",
    "    if len(page_list) == 0:\n",
    "        all_pages = True\n",
    "    \n",
    "    raw_image_paths = []\n",
    "    for dir_path in glob.glob(glob_path_template):\n",
    "        \n",
    "        dir_components = dir_path.split('/')\n",
    "        page = int(dir_components[-2][1:])\n",
    "        \n",
    "        collect = False\n",
    "        if not all_pages:\n",
    "            if page in page_list:\n",
    "                collect = True\n",
    "        else:\n",
    "            collect = True\n",
    "        \n",
    "        # if collect image in page directory\n",
    "        if collect:\n",
    "            images_file_names_list = listdir(dir_path)\n",
    "            for img_fname in images_file_names_list:\n",
    "                if img_fname != '.DS_Store':\n",
    "                    full_image_path = dir_path + img_fname\n",
    "                    raw_image_paths += [full_image_path]\n",
    "                \n",
    "    return raw_image_paths\n",
    "\n",
    "all_raw_image_paths = get_all_raw_image_paths()\n",
    "\n",
    "\n",
    "\n",
    "def create_user_defined_label(raw_image_path):\n",
    "    \n",
    "    raw_img = PImage.open(raw_image_path)\n",
    "    raw_img.show()\n",
    "    \n",
    "    dir_components = raw_image_path.split('/')\n",
    "    page = int(dir_components[-2][1:])\n",
    "    pinyin = input(\"Pinyin (no tones): \")\n",
    "    tone = int(input(\"tone (integer 1-4): \"))\n",
    "    enlgish_definition = input(\"english definition: \")\n",
    "    \n",
    "    user_defined_label = {\n",
    "        'raw_image_path' : raw_image_path,\n",
    "        'page' : page,\n",
    "        'pinyin' : pinyin,\n",
    "        'tone' : tone,\n",
    "        'enlgish_definition' : enlgish_definition\n",
    "    }\n",
    "    \n",
    "    return user_defined_label\n",
    "    \n",
    "#label_test = create_user_defined_label(all_raw_image_paths[0])\n",
    "\n",
    "import os\n",
    "import json\n",
    "\n",
    "def add_user_defined_labels(user_defined_labels, labels_dir, user_defined_labels_file):\n",
    "    \n",
    "    fpath = labels_dir + '/' + user_defined_labels_file\n",
    "\n",
    "    if not os.path.exists(labels_dir):\n",
    "        os.makedirs(labels_dir)\n",
    "\n",
    "        with open(fpath, 'w') as file:\n",
    "            file.write(json.dumps(user_defined_labels)) # use `json.loads` to do the reverse\n",
    "\n",
    "    else:\n",
    "        # read in json file\n",
    "        with open(fpath,'r') as inf:\n",
    "            stored_labels_dict_list = eval(inf.read())\n",
    "        \n",
    "        # merge stored and new\n",
    "        combined_labeled_dict_list = user_defined_labels + stored_labels_dict_list\n",
    "        \n",
    "        \n",
    "        with open(fpath, 'w') as file:\n",
    "            file.write(json.dumps(combined_labeled_dict_list)) # use `json.loads` to do the reverse\n",
    "\n",
    "\n",
    "# directory for labels\n",
    "labels_dir = 'labels'\n",
    "# label data file path\n",
    "user_defined_labels_file = 'user_defined_labels.json'\n",
    "    \n",
    "def create_all_user_defined_labels(labels_dir, user_defined_labels_file, page_list=[]):\n",
    "    \n",
    "    all_raw_image_paths = get_all_raw_image_paths(page_list=page_list)\n",
    "    \n",
    "    new_user_defined_labels = []\n",
    "    for raw_image_path in all_raw_image_paths:\n",
    "        user_label = create_user_defined_label(raw_image_path)\n",
    "        new_user_defined_labels.append(user_label)\n",
    "        \n",
    "    add_user_defined_labels(new_user_defined_labels, labels_dir, user_defined_labels_file)\n",
    "\n",
    "def get_user_defined_labels(labels_dir, user_defined_labels_file):\n",
    "    \n",
    "    fpath = labels_dir + '/' + user_defined_labels_file\n",
    "    \n",
    "    if not os.path.exists(labels_dir):\n",
    "        print(\"error directory does not exist yet.\")\n",
    "        return\n",
    "        \n",
    "    if not os.path.exists(fpath):\n",
    "        print(\"error file does not exists\")\n",
    "        return\n",
    "    \n",
    "    # read in json file\n",
    "    with open(fpath,'r') as inf:\n",
    "        stored_labels_dict_list = eval(inf.read())\n",
    "        \n",
    "    return stored_labels_dict_list\n",
    "\n",
    "#user_defined_labels = get_user_defined_labels(labels_dir, user_defined_labels_file)\n",
    "#print(user_defined_labels)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pinyin (no tones): zhen\n",
      "tone (integer 1-4): 1\n",
      "english definition: true; genuine; really\n",
      "Pinyin (no tones): qing\n",
      "tone (integer 1-4): 3\n",
      "english definition: to request; please, invite\n",
      "Pinyin (no tones): zuo\n",
      "tone (integer 1-4): 4\n",
      "english definition: sit; ride; etc.\n",
      "Pinyin (no tones): qi\n",
      "tone (integer 1-4): 2\n",
      "english definition: strange; rare; wonderful\n",
      "Pinyin (no tones): guai\n",
      "tone (integer 1-4): 4\n",
      "english definition: queer; to blame (strange when combined with tone 2)\n",
      "[{'raw_image_path': 'raw_images/cropped_pages/p21/zhen.png', 'pinyin': 'zhen', 'enlgish_definition': 'true; genuine; really', 'tone': 1, 'page': 21}, {'raw_image_path': 'raw_images/cropped_pages/p21/qing.png', 'pinyin': 'qing', 'enlgish_definition': 'to request; please, invite', 'tone': 3, 'page': 21}, {'raw_image_path': 'raw_images/cropped_pages/p21/zuo.png', 'pinyin': 'zuo', 'enlgish_definition': 'sit; ride; etc.', 'tone': 4, 'page': 21}, {'raw_image_path': 'raw_images/cropped_pages/p21/qi.png', 'pinyin': 'qi', 'enlgish_definition': 'strange; rare; wonderful', 'tone': 2, 'page': 21}, {'raw_image_path': 'raw_images/cropped_pages/p21/guai.png', 'pinyin': 'guai', 'enlgish_definition': 'queer; to blame (strange when combined with tone 2)', 'tone': 4, 'page': 21}, {'raw_image_path': 'raw_images/cropped_pages/p20/mu.png', 'page': 20, 'enlgish_definition': 'mother', 'tone': 3, 'pinyin': 'mu'}, {'raw_image_path': 'raw_images/cropped_pages/p20/yan.png', 'page': 20, 'enlgish_definition': 'eye', 'tone': 3, 'pinyin': 'yan'}, {'raw_image_path': 'raw_images/cropped_pages/p20/ke.png', 'page': 20, 'enlgish_definition': 'lesson', 'tone': 4, 'pinyin': 'ke'}, {'raw_image_path': 'raw_images/cropped_pages/p20/qin.png', 'page': 20, 'enlgish_definition': 'parent; closely related; (mother when combined with mu tone 3)', 'tone': 1, 'pinyin': 'qin'}, {'raw_image_path': 'raw_images/cropped_pages/p20/jing.png', 'page': 20, 'enlgish_definition': 'pupil of the eye (yan jing combination for eyes)', 'tone': 1, 'pinyin': 'jing'}, {'raw_image_path': 'raw_images/cropped_pages/p19/bi.png', 'pinyin': 'bi', 'enlgish_definition': 'nose', 'page': 19, 'tone': 2}, {'raw_image_path': 'raw_images/cropped_pages/p19/qing.png', 'pinyin': 'qing', 'enlgish_definition': 'emotion (temperament with combination)', 'page': 19, 'tone': 2}, {'raw_image_path': 'raw_images/cropped_pages/p19/gao.png', 'pinyin': 'gao', 'enlgish_definition': 'high; tall; surname', 'page': 19, 'tone': 1}, {'raw_image_path': 'raw_images/cropped_pages/p19/xing.png', 'pinyin': 'xing', 'enlgish_definition': 'nature; sex', 'page': 19, 'tone': 4}, {'raw_image_path': 'raw_images/cropped_pages/p19/ai.png', 'pinyin': 'ai', 'enlgish_definition': 'short; low', 'page': 19, 'tone': 3}, {'raw_image_path': 'raw_images/cropped_pages/p18/xia.png', 'tone': 4, 'enlgish_definition': 'below; descend', 'page': 18, 'pinyin': 'xia'}, {'raw_image_path': 'raw_images/cropped_pages/p18/shang.png', 'tone': 4, 'enlgish_definition': 'above; on top, etc.; go to', 'page': 18, 'pinyin': 'shang'}, {'raw_image_path': 'raw_images/cropped_pages/p18/duo.png', 'tone': 1, 'enlgish_definition': 'much; many', 'page': 18, 'pinyin': 'duo'}, {'raw_image_path': 'raw_images/cropped_pages/p18/shao.png', 'tone': 3, 'enlgish_definition': 'few', 'page': 18, 'pinyin': 'shao'}, {'raw_image_path': 'raw_images/cropped_pages/p18/wu.png', 'tone': 3, 'enlgish_definition': 'noon ( combined with zi )', 'page': 18, 'pinyin': 'wu'}, {'raw_image_path': 'raw_images/cropped_pages/p17/dan.png', 'pinyin': 'dan', 'enlgish_definition': 'egg', 'tone': 4, 'page': 17}, {'raw_image_path': 'raw_images/cropped_pages/p17/mei.png', 'pinyin': 'mei', 'enlgish_definition': 'each; every', 'tone': 3, 'page': 17}, {'raw_image_path': 'raw_images/cropped_pages/p17/rou.png', 'pinyin': 'rou', 'enlgish_definition': 'meat', 'tone': 4, 'page': 17}, {'raw_image_path': 'raw_images/cropped_pages/p17/ji.png', 'pinyin': 'ji', 'enlgish_definition': 'chicken', 'tone': 1, 'page': 17}, {'raw_image_path': 'raw_images/cropped_pages/p17/tai.png', 'pinyin': 'tai', 'enlgish_definition': 'excessively', 'tone': 4, 'page': 17}, {'raw_image_path': 'raw_images/cropped_pages/p16/mei.png', 'page': 16, 'enlgish_definition': 'did not; have not', 'tone': 2, 'pinyin': 'mei'}, {'raw_image_path': 'raw_images/cropped_pages/p16/zuo.png', 'page': 16, 'enlgish_definition': 'yesterday', 'tone': 2, 'pinyin': 'zuo'}, {'raw_image_path': 'raw_images/cropped_pages/p16/cuo.png', 'page': 16, 'enlgish_definition': 'error', 'tone': 4, 'pinyin': 'cuo'}, {'raw_image_path': 'raw_images/cropped_pages/p16/dian.png', 'page': 16, 'enlgish_definition': 'a dot (a little with combination)', 'tone': 3, 'pinyin': 'dian'}, {'raw_image_path': 'raw_images/cropped_pages/p16/wan.png', 'page': 16, 'enlgish_definition': 'evening; late', 'tone': 3, 'pinyin': 'wan'}, {'raw_image_path': 'raw_images/cropped_pages/p15/fan.png', 'pinyin': 'fan', 'enlgish_definition': 'cooked rice; food; meal', 'page': 15, 'tone': 4}, {'raw_image_path': 'raw_images/cropped_pages/p15/gou.png', 'pinyin': 'gou', 'enlgish_definition': 'enough', 'page': 15, 'tone': 4}, {'raw_image_path': 'raw_images/cropped_pages/p15/shi.png', 'pinyin': 'shi', 'enlgish_definition': 'a room (classroom when combined with jiao)', 'page': 15, 'tone': 4}, {'raw_image_path': 'raw_images/cropped_pages/p15/jiao.png', 'pinyin': 'jiao', 'enlgish_definition': 'educate if tone 4; to teach to guide if tone 1', 'page': 15, 'tone': 4}, {'raw_image_path': 'raw_images/cropped_pages/p15/chi.png', 'pinyin': 'chi', 'enlgish_definition': 'eat', 'page': 15, 'tone': 1}, {'raw_image_path': 'raw_images/cropped_pages/p14/su.png', 'tone': 4, 'enlgish_definition': 'lodge, stay overnight', 'page': 14, 'pinyin': 'su'}, {'raw_image_path': 'raw_images/cropped_pages/p14/she.png', 'tone': 4, 'enlgish_definition': 'a house; an inn (dormitory when combined with su)', 'page': 14, 'pinyin': 'she'}, {'raw_image_path': 'raw_images/cropped_pages/p14/jian.png', 'tone': 1, 'enlgish_definition': 'AN for room', 'page': 14, 'pinyin': 'jian'}, {'raw_image_path': 'raw_images/cropped_pages/p14/wu.png', 'tone': 1, 'enlgish_definition': 'room', 'page': 14, 'pinyin': 'wu'}, {'raw_image_path': 'raw_images/cropped_pages/p14/xiao.png', 'tone': 4, 'enlgish_definition': 'school', 'page': 14, 'pinyin': 'xiao'}, {'raw_image_path': 'raw_images/cropped_pages/p13/ying.png', 'pinyin': 'ying', 'enlgish_definition': 'hard; stiff', 'tone': 4, 'page': 13}, {'raw_image_path': 'raw_images/cropped_pages/p13/chuang.png', 'pinyin': 'chuang', 'enlgish_definition': 'bed', 'tone': 2, 'page': 13}, {'raw_image_path': 'raw_images/cropped_pages/p13/jiu.png', 'pinyin': 'jiu', 'enlgish_definition': 'old', 'tone': 4, 'page': 13}, {'raw_image_path': 'raw_images/cropped_pages/p13/ruan.png', 'pinyin': 'ruan', 'enlgish_definition': 'soft', 'tone': 3, 'page': 13}, {'raw_image_path': 'raw_images/cropped_pages/p13/xin.png', 'pinyin': 'xin', 'enlgish_definition': 'new', 'tone': 1, 'page': 13}, {'raw_image_path': 'raw_images/cropped_pages/p12/jue.png', 'page': 12, 'enlgish_definition': 'perceive; become conscious of', 'tone': 2, 'pinyin': 'jue'}, {'raw_image_path': 'raw_images/cropped_pages/p12/lei.png', 'page': 12, 'enlgish_definition': 'tired', 'tone': 4, 'pinyin': 'lei'}, {'raw_image_path': 'raw_images/cropped_pages/p12/jin.png', 'page': 12, 'enlgish_definition': 'now, at present', 'tone': 1, 'pinyin': 'jin'}, {'raw_image_path': 'raw_images/cropped_pages/p12/de.png', 'page': 12, 'enlgish_definition': 'obtain; part of a potential complement (feel when combined with joe tone 2)', 'tone': 2, 'pinyin': 'de'}, {'raw_image_path': 'raw_images/cropped_pages/p12/tian.png', 'page': 12, 'enlgish_definition': 'sky; day; weather', 'tone': 1, 'pinyin': 'tian'}, {'raw_image_path': 'raw_images/cropped_pages/p11/you.png', 'pinyin': 'you', 'enlgish_definition': 'have; there is, there are (combined with ming for famous, different then you tone 3 for friend)', 'page': 11, 'tone': 3}, {'raw_image_path': 'raw_images/cropped_pages/p11/ming.png', 'pinyin': 'ming', 'enlgish_definition': 'name (famous when combined with you tone 3)', 'page': 11, 'tone': 2}, {'raw_image_path': 'raw_images/cropped_pages/p11/hen.png', 'pinyin': 'hen', 'enlgish_definition': 'very', 'page': 11, 'tone': 3}, {'raw_image_path': 'raw_images/cropped_pages/p11/zao.png', 'pinyin': 'zao', 'enlgish_definition': 'early', 'page': 11, 'tone': 3}, {'raw_image_path': 'raw_images/cropped_pages/p11/kan.png', 'pinyin': 'kan', 'enlgish_definition': 'look at', 'page': 11, 'tone': 4}, {'raw_image_path': 'raw_images/cropped_pages/p10/dan.png', 'tone': 4, 'enlgish_definition': 'but', 'page': 10, 'pinyin': 'dan'}, {'raw_image_path': 'raw_images/cropped_pages/p10/ke.png', 'tone': 3, 'enlgish_definition': 'but, may, able', 'page': 10, 'pinyin': 'ke'}, {'raw_image_path': 'raw_images/cropped_pages/p10/jiao.png', 'tone': 4, 'enlgish_definition': 'to call; be called, be named (usually first name)', 'page': 10, 'pinyin': 'jiao'}, {'raw_image_path': 'raw_images/cropped_pages/p10/ran.png', 'tone': 2, 'enlgish_definition': 'thus, so (although when combined with sui)', 'page': 10, 'pinyin': 'ran'}, {'raw_image_path': 'raw_images/cropped_pages/p10/sui.png', 'tone': 2, 'enlgish_definition': 'although (when combined with ran)', 'page': 10, 'pinyin': 'sui'}, {'raw_image_path': 'raw_images/cropped_pages/p9/dui.png', 'pinyin': 'dui', 'enlgish_definition': 'correct, right; opposite to; to face', 'tone': 4, 'page': 9}, {'raw_image_path': 'raw_images/cropped_pages/p9/shi.png', 'pinyin': 'shi', 'enlgish_definition': 'teacher', 'tone': 1, 'page': 9}, {'raw_image_path': 'raw_images/cropped_pages/p9/da.png', 'pinyin': 'da', 'enlgish_definition': 'big', 'tone': 4, 'page': 9}, {'raw_image_path': 'raw_images/cropped_pages/p9/lao.png', 'pinyin': 'lao', 'enlgish_definition': 'old, elderly, venerable; prefix', 'tone': 3, 'page': 9}, {'raw_image_path': 'raw_images/cropped_pages/p9/hao.png', 'pinyin': 'hao', 'enlgish_definition': 'good, well', 'tone': 3, 'page': 9}, {'raw_image_path': 'raw_images/cropped_pages/p8/ma.png', 'page': 8, 'enlgish_definition': 'interrogative particle', 'tone': 0, 'pinyin': 'ma'}, {'raw_image_path': 'raw_images/cropped_pages/p8/nei.png', 'page': 8, 'enlgish_definition': 'which', 'tone': 3, 'pinyin': 'nei'}, {'raw_image_path': 'raw_images/cropped_pages/p8/shei.png', 'page': 8, 'enlgish_definition': 'who, whom', 'tone': 2, 'pinyin': 'shei'}, {'raw_image_path': 'raw_images/cropped_pages/p8/ne.png', 'page': 8, 'enlgish_definition': 'particle with many functions (at the end of a follow-up question: And?)', 'tone': 0, 'pinyin': 'ne'}, {'raw_image_path': 'raw_images/cropped_pages/p8/za.png', 'page': 8, 'enlgish_definition': 'we (when listener is included', 'tone': 2, 'pinyin': 'za'}, {'raw_image_path': 'raw_images/cropped_pages/p7/zhang.png', 'pinyin': 'zhang', 'enlgish_definition': 'AN for tables, beds, sheets of paper, etc. also surname', 'page': 7, 'tone': 1}, {'raw_image_path': 'raw_images/cropped_pages/p7/zi.png', 'pinyin': 'zi', 'enlgish_definition': 'son, child; noun suffix', 'page': 7, 'tone': 3}, {'raw_image_path': 'raw_images/cropped_pages/p7/zhuo.png', 'pinyin': 'zhuo', 'enlgish_definition': 'table', 'page': 7, 'tone': 1}, {'raw_image_path': 'raw_images/cropped_pages/p7/yi.png', 'pinyin': 'yi', 'enlgish_definition': 'chair', 'page': 7, 'tone': 3}, {'raw_image_path': 'raw_images/cropped_pages/p7/ba.png', 'pinyin': 'ba', 'enlgish_definition': 'AN for things with handles', 'page': 7, 'tone': 3}, {'raw_image_path': 'raw_images/cropped_pages/p6/ta.png', 'tone': 1, 'enlgish_definition': 'he, him', 'page': 6, 'pinyin': 'ta'}, {'raw_image_path': 'raw_images/cropped_pages/p6/zhei.png', 'tone': 4, 'enlgish_definition': 'this, these', 'page': 6, 'pinyin': 'zhei'}, {'raw_image_path': 'raw_images/cropped_pages/p6/nei.png', 'tone': 4, 'enlgish_definition': 'that, those', 'page': 6, 'pinyin': 'nei'}, {'raw_image_path': 'raw_images/cropped_pages/p6/gou.png', 'tone': 3, 'enlgish_definition': 'dog', 'page': 6, 'pinyin': 'gou'}, {'raw_image_path': 'raw_images/cropped_pages/p6/zhi.png', 'tone': 1, 'enlgish_definition': 'AN for animals', 'page': 6, 'pinyin': 'zhi'}, {'raw_image_path': 'raw_images/cropped_pages/p5/gui.png', 'pinyin': 'gui', 'enlgish_definition': 'noble; expensive; honorable', 'tone': 4, 'page': 5}, {'raw_image_path': 'raw_images/cropped_pages/p5/ding.png', 'pinyin': 'Ding', 'enlgish_definition': 'common surname', 'tone': 1, 'page': 5}, {'raw_image_path': 'raw_images/cropped_pages/p5/nan.png', 'pinyin': 'nan', 'enlgish_definition': 'male', 'tone': 2, 'page': 5}, {'raw_image_path': 'raw_images/cropped_pages/p5/xing.png', 'pinyin': 'xing', 'enlgish_definition': 'to be surnamed', 'tone': 4, 'page': 5}, {'raw_image_path': 'raw_images/cropped_pages/p5/nu.png', 'pinyin': 'nu', 'enlgish_definition': 'female', 'tone': 3, 'page': 5}, {'raw_image_path': 'raw_images/cropped_pages/p4/you.png', 'page': 4, 'enlgish_definition': 'friend', 'tone': 3, 'pinyin': 'you'}, {'raw_image_path': 'raw_images/cropped_pages/p4/ge.png', 'page': 4, 'enlgish_definition': 'general AN', 'tone': 4, 'pinyin': 'ge'}, {'raw_image_path': 'raw_images/cropped_pages/p4/peng.png', 'page': 4, 'enlgish_definition': 'friend', 'tone': 2, 'pinyin': 'peng'}, {'raw_image_path': 'raw_images/cropped_pages/p4/de.png', 'page': 4, 'enlgish_definition': 'particle of subordination and modification', 'tone': 0, 'pinyin': 'de'}, {'raw_image_path': 'raw_images/cropped_pages/p4/hai.png', 'page': 4, 'enlgish_definition': 'still; yet', 'tone': 2, 'pinyin': 'hai'}, {'raw_image_path': 'raw_images/cropped_pages/p3/sheng.png', 'pinyin': 'sheng', 'enlgish_definition': 'be born, when combined with xue student', 'page': 3, 'tone': 1}, {'raw_image_path': 'raw_images/cropped_pages/p3/xue.png', 'pinyin': 'xue', 'enlgish_definition': 'to study, learn', 'page': 3, 'tone': 2}, {'raw_image_path': 'raw_images/cropped_pages/p3/gen.png', 'pinyin': 'gen', 'enlgish_definition': 'follow, with, and', 'page': 3, 'tone': 1}, {'raw_image_path': 'raw_images/cropped_pages/p3/xiao.png', 'pinyin': 'xiao', 'enlgish_definition': 'small', 'page': 3, 'tone': 3}, {'raw_image_path': 'raw_images/cropped_pages/p3/zhong.png', 'pinyin': 'zhong', 'enlgish_definition': 'middle, center, China when combined with nation', 'page': 3, 'tone': 1}, {'raw_image_path': 'raw_images/cropped_pages/p2/ni.png', 'tone': 3, 'enlgish_definition': 'you', 'page': 2, 'pinyin': 'ni'}, {'raw_image_path': 'raw_images/cropped_pages/p2/men.png', 'tone': 2, 'enlgish_definition': 'plural ending for pronouns', 'page': 2, 'pinyin': 'men'}, {'raw_image_path': 'raw_images/cropped_pages/p2/dou.png', 'tone': 1, 'enlgish_definition': 'all, in every case', 'page': 2, 'pinyin': 'dou'}, {'raw_image_path': 'raw_images/cropped_pages/p2/ye.png', 'tone': 3, 'enlgish_definition': 'also, too, even', 'page': 2, 'pinyin': 'ye'}, {'raw_image_path': 'raw_images/cropped_pages/p2/bu.png', 'tone': 4, 'enlgish_definition': 'not', 'page': 2, 'pinyin': 'bu'}, {'raw_image_path': 'raw_images/cropped_pages/p1/ren.png', 'pinyin': 'ren', 'enlgish_definition': 'man, woman, person, human being', 'tone': 2, 'page': 1}, {'raw_image_path': 'raw_images/cropped_pages/p1/mei.png', 'pinyin': 'mei', 'enlgish_definition': 'beautiful', 'tone': 3, 'page': 1}, {'raw_image_path': 'raw_images/cropped_pages/p1/wo.png', 'pinyin': 'wo', 'enlgish_definition': 'I, me', 'tone': 3, 'page': 1}, {'raw_image_path': 'raw_images/cropped_pages/p1/guo.png', 'pinyin': 'guo', 'enlgish_definition': 'nation, state', 'tone': 2, 'page': 1}, {'raw_image_path': 'raw_images/cropped_pages/p1/shi.png', 'pinyin': 'shi', 'enlgish_definition': 'am, is, are', 'tone': 4, 'page': 1}]\n"
     ]
    }
   ],
   "source": [
    "\n",
    "page_list=[21]\n",
    "create_all_user_defined_labels(labels_dir, user_defined_labels_file, page_list=page_list)\n",
    "\n",
    "user_defined_labels = get_user_defined_labels(labels_dir, user_defined_labels_file)\n",
    "print(user_defined_labels)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#\n",
    "#  random quiz\n",
    "#\n",
    "\n",
    "def quiz_on_character(character_dict):\n",
    "    # display random character info\n",
    "    print(\"\\n\")\n",
    "    print(\"pinyin: %s, tone: %s\\n\" % (character_dict['pinyin'], character_dict['tone']) )\n",
    "\n",
    "    # prompt user for displaying english definition\n",
    "    input(\"to display english definition hit enter:\")\n",
    "    print(\"\\nEnglish Definition: \")\n",
    "    print(character_dict['enlgish_definition'])\n",
    "\n",
    "    # prompt user for displaying character\n",
    "    input(\"to display character hit enter:\")\n",
    "\n",
    "    # display answer\n",
    "    raw_img = PImage.open(character_dict['raw_image_path'])\n",
    "    raw_img.show()\n",
    "\n",
    "from random import randint\n",
    "\n",
    "def random_character_quiz(labels_dir, user_defined_labels_file, num_characters=1):\n",
    "    \n",
    "    # load labels\n",
    "    user_defined_labels = get_user_defined_labels(labels_dir, user_defined_labels_file)\n",
    "    \n",
    "    difficult_characters = []\n",
    "    for i in range(num_characters):\n",
    "        \n",
    "        # choose random character\n",
    "        randindx = randint(0, len(user_defined_labels)-1)\n",
    "        random_character = user_defined_labels[randindx]\n",
    "\n",
    "        quiz_on_character(random_character)\n",
    "        \n",
    "        difficult = input(\"difficult? (y/n)\")\n",
    "        \n",
    "        if difficult=='y':\n",
    "            difficult_characters += [ random_character ]\n",
    "            \n",
    "    return difficult_characters\n",
    "\n",
    "def character_quiz(characters):\n",
    "    \n",
    "    difficult_characters = []\n",
    "    for character in characters:\n",
    "        \n",
    "        quiz_on_character( character )\n",
    "        difficult = input(\"difficult? (y/n)\")\n",
    "        \n",
    "        if difficult=='y':\n",
    "            difficult_characters += [ character ]\n",
    "            \n",
    "    return difficult_characters\n",
    "\n",
    "\n",
    "def quiz_on_pages(labels_dir, user_defined_labels_file, pages):\n",
    "    print(\"???\")\n",
    "    \n",
    "    # load labels\n",
    "    user_defined_labels = get_user_defined_labels(labels_dir, user_defined_labels_file)\n",
    "    \n",
    "    difficult_characters = []\n",
    "    for label in user_defined_labels:\n",
    "        print(label['page'])\n",
    "        if label['page'] in page_list:\n",
    "            \n",
    "            quiz_on_character( character )\n",
    "            difficult = input(\"difficult? (y/n)\")\n",
    "\n",
    "            if difficult=='y':\n",
    "                difficult_characters += [ character ]\n",
    "                \n",
    "    return difficult_characters\n",
    "            \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# directory for labels\n",
    "labels_dir = 'labels'\n",
    "# label data file path\n",
    "user_defined_labels_file = 'user_defined_labels.json'\n",
    "    \n",
    "pages = [1,2,3,4,5,6,7,8,9,10]\n",
    "\n",
    "quiz_on_pages(labels_dir, user_defined_labels_file, pages)\n",
    "#difficult_characters = quiz_on_pages(labels_dir, user_defined_labels_file, pages)\n",
    "\n",
    "# requiz on difficult characters\n",
    "#difficult_characters = character_quiz(difficult_characters)\n",
    "\n",
    "# requiz on difficult characters\n",
    "#difficult_characters = character_quiz(difficult_characters)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "num_characters = 5\n",
    "difficult_characters = random_character_quiz(labels_dir, user_defined_labels_file, num_characters=num_characters)\n",
    "\n",
    "\n",
    "difficult_characters = character_quiz(difficult_characters)\n",
    "difficult_characters = character_quiz(difficult_characters)\n",
    "difficult_characters = character_quiz(difficult_characters)\n",
    "\n",
    "print(difficult_characters)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
